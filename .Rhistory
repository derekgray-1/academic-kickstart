scale_colour_manual(name = "Group", labels = c("GSA", "ISR", "3"), values= c("black","darkgrey"))+
labs(x=bquote("RDA1("*lambda == .(RDA1)* ")"), y=bquote("RDA2("*lambda == .(RDA2)* ")"))
RDArach
#by lake type
RDArach <- p +   geom_point(data = df11, size=3, aes(x = RDA1, y = RDA2, shape=lake.type2, col=lake.type2, label = NULL)) +
theme_bw()  +
scale_shape_manual(name = "Group", labels = c("GSA", "ISR"), values= c(15,16))+
scale_colour_manual(name = "Group", labels = c("GSA", "ISR", "3"), values= c("black","darkgrey"))+
labs(x=bquote("RDA1 ("*lambda == .(RDA1)* ")"), y=bquote("RDA2 ("*lambda == .(RDA2)* ")"))
RDArach
df33
#better names for predictor variables
row.names(df33)
#better names for predictor variables
row.names(df33)<-c("Latitude","Conductivity","SA","Mean.Depth","% Silts/clays")
#use ggplot2 to make an RDA plot
p<-ggplot(df22, aes(x=RDA1, y=RDA2), add="T") +
geom_text(aes(label=rownames(df22)),size=4,colour="black") +
geom_hline(yintercept=0, linetype="dotted") +
geom_vline(xintercept=0, linetype="dotted") +
coord_fixed()+
scale_x_continuous(limits = c(-1.3, 1.0))+
scale_y_continuous(limits = c(-1.0, 1.0))+
geom_segment(data=df33, aes(x=0, xend=RDA1, y=0, yend=RDA2),
color="black", arrow=arrow(length=unit(0.01,"npc"))) +
geom_text(data=df33, aes(x=RDA1,y=RDA2,label=rownames(df33),
hjust=0.5*(1-sign(RDA1)),vjust=0.5*(1-sign(RDA2))),
color="darkgrey", size=4)+
theme_bw()+
theme(legend.position= "none")
p
#by lake type
RDArach <- p +   geom_point(data = df11, size=3, aes(x = RDA1, y = RDA2, shape=lake.type2, col=lake.type2, label = NULL)) +
theme_bw()  +
scale_shape_manual(name = "Group", labels = c("GSA", "ISR"), values= c(15,16))+
scale_colour_manual(name = "Group", labels = c("GSA", "ISR", "3"), values= c("black","darkgrey"))+
labs(x=bquote("RDA1 ("*lambda == .(RDA1)* ")"), y=bquote("RDA2 ("*lambda == .(RDA2)* ")"))
RDArach
#by lake type
RDArach <- p +   geom_point(data = df11, size=3, aes(x = RDA1, y = RDA2, shape=lake.type2, col=lake.type2, label = NULL)) +
theme_bw()  +
scale_shape_manual(name = "Group", labels = c("GSA", "ISR"), values= c(15,16))+
scale_colour_manual(name = "Group", labels = c("GSA", "ISR", "3"), values= c("black","darkgrey"),size=15)+
labs(x=bquote("RDA1 ("*lambda == .(RDA1)* ")"), y=bquote("RDA2 ("*lambda == .(RDA2)* ")"))
#use ggplot2 to make an RDA plot
p<-ggplot(df22, aes(x=RDA1, y=RDA2), add="T") +
geom_text(aes(label=rownames(df22)),size=4,colour="black") +
geom_hline(yintercept=0, linetype="dotted") +
geom_vline(xintercept=0, linetype="dotted") +
coord_fixed()+
scale_x_continuous(limits = c(-1.3, 1.0))+
scale_y_continuous(limits = c(-1.0, 1.0))+
geom_segment(data=df33, aes(x=0, xend=RDA1, y=0, yend=RDA2),
color="black", arrow=arrow(length=unit(0.01,"npc"))) +
geom_text(data=df33, aes(x=RDA1,y=RDA2,label=rownames(df33),
hjust=0.5*(1-sign(RDA1)),vjust=0.5*(1-sign(RDA2))),
color="darkgrey", size=5)+
theme_bw()+
theme(legend.position= "none")
p
#by lake type
RDArach <- p +   geom_point(data = df11, size=3, aes(x = RDA1, y = RDA2, shape=lake.type2, col=lake.type2, label = NULL)) +
theme_bw()  +
scale_shape_manual(name = "Group", labels = c("GSA", "ISR"), values= c(15,16))+
scale_colour_manual(name = "Group", labels = c("GSA", "ISR", "3"), values= c("black","darkgrey"))+
labs(x=bquote("RDA1 ("*lambda == .(RDA1)* ")"), y=bquote("RDA2 ("*lambda == .(RDA2)* ")"))
RDArach
ordistep(mod2, scope = formula(mod3), direction="both", perm.max = 10000)
my.result1=rda(z001~Latitude+Cond+SA+Mean.Depth+X.silts.and.clays+Chla, data=final.predictors3)
summary(my.result1)
RsquareAdj(my.result1)
#Is the RDA significant? Run a permuatation test
permutest(my.result1, permutations = 10000)
#Test for collinearity among predictors in your model using the variance
#inflation factor
vif.cca(my.result1) #values >10 indicate collinearity
plot(my.result1)
my.result1=rda(z001~Latitude+Cond+SA+Mean.Depth+Chla, data=final.predictors3)
summary(my.result1)
RsquareAdj(my.result1)
my.result1=rda(z001~Latitude+Cond+SA+Mean.Depth+X.silts.and.clays, data=final.predictors3)
summary(my.result1)
RsquareAdj(my.result1)
pdf("RDA_32.pdf",width=7,height=7)
RDArach
dev.off()
species3<-read.csv("species_density_32.csv",row.names=1)
density3<-log10(rowSums(species3))
library(hier.part)
xcan.frame<-data.frame(predictors3$X.silts.and.clays,predictors3$Chla,predictors3$TOC,predictors3$TN,predictors3$Sp_Whitefish,predictors3$Mean.Depth,predictors3$X...2mm,predictors3$Secchi,predictors3$TP,predictors3$Turb,predictors3$Latitude,predictors3$Temp)
scan.frame
xcan.frame
names(xcan.frame)
xcan.frame<-data.frame(predictors3$X.silts.and.clays,predictors3$Chla,predictors3$SA,predictors3$TN,predictors3$Sp_Whitefish,predictors3$Mean.Depth,predictors3$X...2mm,predictors3$Secchi,predictors3$TP,predictors3$Turb,predictors3$Latitude,predictors3$Temp)
hier.richness<-hier.part(density3,xcan=xcan.frame )
#take results out of hier.richness
hier.abun.res<-hier.richness$I.perc
hier.abun.res$Variable<-factor(row.names(hier.abun.res),levels=sort(row.names(hier.abun.res)))
newdata3 <- hier.abun.res
names(newdata3)
newdata3$Variable
newdata3$Variable<-c("%Silts/clays","Chla","SA","TN","Whitefish P/A","Mean.depth","%Sed<2mm","Secchi","TP","Turbidity","Latitude","Temp")
plot3<-ggplot(newdata3,aes(x = Variable, y=I, fill = impact))+
geom_bar(stat="identity")+
theme_classic()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
xlab("Variable")+
ylab("Percent variance")+
theme(axis.title.x=element_blank())+
theme(axis.title.y=element_blank())+
ylim(0,35)+
scale_x_discrete(labels = c("Chlorophyll a","Latitude","Mean depth","Secchi depth","Whitefish P/A","Temperature","TN","DOC","TP","Turbidity","% sediment <2 mm","% silts and clays"))+
scale_fill_manual("", values = c("Affected by thaw" = "black", "Not affected by thaw" = "grey"))+
theme(legend.position = "none")
plot3<-ggplot(newdata3,aes(x = Variable, y=I))+
geom_bar(stat="identity")+
theme_classic()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
xlab("Variable")+
ylab("Percent variance")+
theme(axis.title.x=element_blank())+
theme(axis.title.y=element_blank())+
ylim(0,35)
plot3
newdata3$Variable<-c("% Silts/clays","Chla","SA","TN","Whitefish P/A","Mean depth","%Sed <2mm","Secchi","TP","Turbidity","Latitude","Temp")
plot3<-ggplot(newdata3,aes(x = Variable, y=I))+
geom_bar(stat="identity")+
theme_classic()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
xlab("Variable")+
ylab("Percent variance")+
theme(axis.title.x=element_blank())+
theme(axis.title.y=element_blank())+
ylim(0,35)
plot3
counts3<-read.csv("species_raw counts_32.csv",row.names=1)
rowSums(counts3)
min(rowSums(counts3))
result3<-rarefy(counts3,sample=239)
counts3<-read.csv("species_raw counts_32.csv",row.names=1)
library(vegan)
min(rowSums(counts3))
result3<-rarefy(counts3,sample=239)
library(hier.part)
xcan.frame<-data.frame(predictors3$X.silts.and.clays,predictors3$Chla,predictors3$SA,predictors3$TN,predictors3$Sp_Whitefish,predictors3$Mean.Depth,predictors3$X...2mm,predictors3$Secchi,predictors3$TP,predictors3$Turb,predictors3$Latitude,predictors3$Temp)
hier.richness<-hier.part(result3,xcan=xcan.frame )
result3
xcan.frame
#make a dataframe of the results
macro.richness3=data.frame("Lake"=names(result3),"Richness"=as.numeric(result3))
counts3<-read.csv("species_raw counts_32.csv",row.names=1)
library(vegan)
min(rowSums(counts3))
result3<-rarefy(counts3,sample=239)
#make a dataframe of the results
macro.richness3=data.frame("Lake"=names(result3),"Richness"=as.numeric(result3))
library(hier.part)
xcan.frame<-data.frame(predictors3$X.silts.and.clays,predictors3$Chla,predictors3$SA,predictors3$TN,predictors3$Sp_Whitefish,predictors3$Mean.Depth,predictors3$X...2mm,predictors3$Secchi,predictors3$TP,predictors3$Turb,predictors3$Latitude,predictors3$Temp)
hier.richness<-hier.part(macro.richness3$Richness,xcan=xcan.frame)
#take results out of hier.richness
hier.abun.res<-hier.richness$I.perc
hier.abun.res$Variable<-factor(row.names(hier.abun.res),levels=sort(row.names(hier.abun.res)))
newdata2 <- hier.abun.res
newdata2$Variable<-c("% Silts/clays","Chla","SA","TN","Whitefish P/A","Mean depth","%Sed <2mm","Secchi","TP","Turbidity","Latitude","Temp")
plot2<-ggplot(newdata2,aes(x = Variable, y=I))+
geom_bar(stat="identity")+
theme_classic()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
xlab("Variable")+
ylab("Percent variance")+
theme(axis.title.x=element_blank())+
theme(axis.title.y=element_blank())+
ylim(0,35)
plot2
library(ggplot2)
library(iNEXT)
library(devtools)
species3=read.csv("species_raw counts_32.csv",stringsAsFactors=F)
species3=read.csv("species_raw counts_32.csv",stringsAsFactors=F,row.names=1)
hill.diver3<- estimateD(t(species3),datatype="abundance",base="size")
diversity.frame3<-hill.diver3[which(hill.diver3$order==1),]
diversity.fram03<-data.frame("Diversity3"=diversity.frame3$qD,"Lake"=row.names(species3))
#dive3<-log10(diversity.fram03$Diversity3) #make a
dive3<-diversity.fram03$Diversity3
library(hier.part)
xcan.frame<-data.frame(predictors3$X.silts.and.clays,predictors3$Chla,predictors3$SA,predictors3$TN,predictors3$Sp_Whitefish,predictors3$Mean.Depth,predictors3$X...2mm,predictors3$Secchi,predictors3$TP,predictors3$Turb,predictors3$Latitude,predictors3$Temp)
hier.richness<-hier.part(dive3$Richness,xcan=xcan.frame)
dive3$Richness
hier.dive<-hier.part(dive3,xcan=xcan.frame)
#take results out of hier.richness
hier.abun.res<-hier.richness$I.perc
hier.abun.res$Variable<-factor(row.names(hier.abun.res),levels=sort(row.names(hier.abun.res)))
newdata1 <- hier.abun.res
newdata1$Variable<-c("% Silts/clays","Chla","SA","TN","Whitefish P/A","Mean depth","%Sed <2mm","Secchi","TP","Turbidity","Latitude","Temp")
plot1<-ggplot(newdata1,aes(x = Variable, y=I))+
geom_bar(stat="identity")+
theme_classic()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
xlab("Variable")+
ylab("Percent variance")+
theme(axis.title.x=element_blank())+
theme(axis.title.y=element_blank())+
ylim(0,35)
plot1
#take results out of hier.richness
hier.abun.res<-hier.dive$I.perc
hier.abun.res$Variable<-factor(row.names(hier.abun.res),levels=sort(row.names(hier.abun.res)))
newdata1 <- hier.abun.res
newdata1$Variable<-c("% Silts/clays","Chla","SA","TN","Whitefish P/A","Mean depth","%Sed <2mm","Secchi","TP","Turbidity","Latitude","Temp")
plot1<-ggplot(newdata1,aes(x = Variable, y=I))+
geom_bar(stat="identity")+
theme_classic()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
xlab("Variable")+
ylab("Percent variance")+
theme(axis.title.x=element_blank())+
theme(axis.title.y=element_blank())+
ylim(0,35)
plot1
scores(fit1)
scores(fit1)[,1]
scores(fit1)[1,]
hier.pc1$I.perc
PC1<-scores(fit1)[,1]
library(hier.part)
xcan.frame<-data.frame(predictors3$X.silts.and.clays,predictors3$Chla,predictors3$SA,predictors3$TN,predictors3$Sp_Whitefish,predictors3$Mean.Depth,predictors3$X...2mm,predictors3$Secchi,predictors3$TP,predictors3$Turb,predictors3$Latitude,predictors3$Temp)
hier.pc1<-hier.part(PC1,xcan=xcan.frame)
hier.pc1$I.perc
#take results out of hier.richness
hier.abun.res<-hier.pc1$I.perc
hier.abun.res$Variable<-factor(row.names(hier.abun.res),levels=sort(row.names(hier.abun.res)))
newdata0 <- hier.abun.res
newdata0$Variable<-c("% Silts/clays","Chla","SA","TN","Whitefish P/A","Mean depth","%Sed <2mm","Secchi","TP","Turbidity","Latitude","Temp")
plot1<-ggplot(newdata0,aes(x = Variable, y=I))+
geom_bar(stat="identity")+
theme_classic()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
xlab("Variable")+
ylab("Percent variance")+
theme(axis.title.x=element_blank())+
theme(axis.title.y=element_blank())+
ylim(0,35)
plot0<-ggplot(newdata0,aes(x = Variable, y=I))+
geom_bar(stat="identity")+
theme_classic()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
xlab("Variable")+
ylab("Percent variance")+
theme(axis.title.x=element_blank())+
theme(axis.title.y=element_blank())+
ylim(0,35)
plot0
library(ggplot2)
PC2<-scores(fit1)[,2]
library(hier.part)
xcan.frame<-data.frame(predictors3$X.silts.and.clays,predictors3$Chla,predictors3$SA,predictors3$TN,predictors3$Sp_Whitefish,predictors3$Mean.Depth,predictors3$X...2mm,predictors3$Secchi,predictors3$TP,predictors3$Turb,predictors3$Latitude,predictors3$Temp)
hier.pc2<-hier.part(PC2,xcan=xcan.frame)
#take results out of hier.richness
hier.abun.res<-hier.pc2$I.perc
hier.abun.res$Variable<-factor(row.names(hier.abun.res),levels=sort(row.names(hier.abun.res)))
newdata6 <- hier.abun.res
newdata6$Variable<-c("% Silts/clays","Chla","SA","TN","Whitefish P/A","Mean depth","%Sed <2mm","Secchi","TP","Turbidity","Latitude","Temp")
plot6<-ggplot(newdata6,aes(x = Variable, y=I))+
geom_bar(stat="identity")+
theme_classic()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
xlab("Variable")+
ylab("Percent variance")+
theme(axis.title.x=element_blank())+
theme(axis.title.y=element_blank())+
ylim(0,35)
plot6
species3<-read.csv("species_density_32.csv",row.names=1)
density3<-log10(rowSums(species3))
library(hier.part)
xcan.frame<-data.frame(predictors3$X.silts.and.clays,predictors3$Chla,predictors3$SA,predictors3$TN,predictors3$Sp_Whitefish,predictors3$Mean.Depth,predictors3$X...2mm,predictors3$Secchi,predictors3$TP,predictors3$Turb,predictors3$Latitude,predictors3$Temp)
hier.abundance<-hier.part(density3,xcan=xcan.frame )
#take results out of hier.abundance
hier.abun.res<-hier.abundance$I.perc
hier.abun.res$Variable<-factor(row.names(hier.abun.res),levels=sort(row.names(hier.abun.res)))
newdata3 <- hier.abun.res
newdata3$Variable<-c("% Silts/clays","Chla","SA","TN","Whitefish P/A","Mean depth","%Sed <2mm","Secchi","TP","Turbidity","Latitude","Temp")
abun.plot<-ggplot(newdata3,aes(x = Variable, y=I))+
geom_bar(stat="identity")+
theme_classic()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
xlab("Variable")+
ylab("Percent variance")+
theme(axis.title.x=element_blank())+
theme(axis.title.y=element_blank())+
ylim(0,35)
abun.plot
abun.plot<-ggplot(newdata3,aes(x = Variable, y=I))+
geom_bar(stat="identity")+
theme_classic()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
xlab("Variable")+
ylab("Percent variance")+
theme(axis.title.x=element_blank(),  axis.text.x=element_blank())+
theme(axis.title.y=element_blank())+
ylim(0,35)
abun.plot
counts3<-read.csv("species_raw counts_32.csv",row.names=1)
library(vegan)
min(rowSums(counts3))
result3<-rarefy(counts3,sample=239)
#make a dataframe of the results
macro.richness3=data.frame("Lake"=names(result3),"Richness"=as.numeric(result3))
library(hier.part)
xcan.frame<-data.frame(predictors3$X.silts.and.clays,predictors3$Chla,predictors3$SA,predictors3$TN,predictors3$Sp_Whitefish,predictors3$Mean.Depth,predictors3$X...2mm,predictors3$Secchi,predictors3$TP,predictors3$Turb,predictors3$Latitude,predictors3$Temp)
hier.richness<-hier.part(macro.richness3$Richness,xcan=xcan.frame)
#take results out of hier.richness
hier.abun.res<-hier.richness$I.perc
hier.abun.res$Variable<-factor(row.names(hier.abun.res),levels=sort(row.names(hier.abun.res)))
newdata2 <- hier.abun.res
newdata2$Variable<-c("% Silts/clays","Chla","SA","TN","Whitefish P/A","Mean depth","%Sed <2mm","Secchi","TP","Turbidity","Latitude","Temp")
rich.plot<-ggplot(newdata2,aes(x = Variable, y=I))+
geom_bar(stat="identity")+
theme_classic()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
xlab("Variable")+
ylab("Percent variance")+
theme(axis.title.x=element_blank(),  axis.text.x=element_blank())+
theme(axis.title.y=element_blank())+
ylim(0,35)
rich.plot
library(ggplot2)
library(iNEXT)
library(devtools)
species3=read.csv("species_raw counts_32.csv",stringsAsFactors=F,row.names=1)
hill.diver3<- estimateD(t(species3),datatype="abundance",base="size")
diversity.frame3<-hill.diver3[which(hill.diver3$order==1),]
diversity.fram03<-data.frame("Diversity3"=diversity.frame3$qD,"Lake"=row.names(species3))
#dive3<-log10(diversity.fram03$Diversity3) #make a
dive3<-diversity.fram03$Diversity3
library(hier.part)
xcan.frame<-data.frame(predictors3$X.silts.and.clays,predictors3$Chla,predictors3$SA,predictors3$TN,predictors3$Sp_Whitefish,predictors3$Mean.Depth,predictors3$X...2mm,predictors3$Secchi,predictors3$TP,predictors3$Turb,predictors3$Latitude,predictors3$Temp)
hier.dive<-hier.part(dive3,xcan=xcan.frame)
#take results out of hier.richness
hier.abun.res<-hier.dive$I.perc
hier.abun.res$Variable<-factor(row.names(hier.abun.res),levels=sort(row.names(hier.abun.res)))
newdata1 <- hier.abun.res
newdata1$Variable<-c("% Silts/clays","Chla","SA","TN","Whitefish P/A","Mean depth","%Sed <2mm","Secchi","TP","Turbidity","Latitude","Temp")
diversity.plot<-ggplot(newdata1,aes(x = Variable, y=I))+
geom_bar(stat="identity")+
theme_classic()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
xlab("Variable")+
ylab("Percent variance")+
theme(axis.title.x=element_blank())+
theme(axis.title.y=element_blank())+
ylim(0,35)
diversity.plot
library(ggplot2)
PC1<-scores(fit1)[,1]
library(hier.part)
xcan.frame<-data.frame(predictors3$X.silts.and.clays,predictors3$Chla,predictors3$SA,predictors3$TN,predictors3$Sp_Whitefish,predictors3$Mean.Depth,predictors3$X...2mm,predictors3$Secchi,predictors3$TP,predictors3$Turb,predictors3$Latitude,predictors3$Temp)
hier.pc1<-hier.part(PC1,xcan=xcan.frame)
#take results out of hier.richness
hier.abun.res<-hier.pc1$I.perc
hier.abun.res$Variable<-factor(row.names(hier.abun.res),levels=sort(row.names(hier.abun.res)))
newdata0 <- hier.abun.res
newdata0$Variable<-c("% Silts/clays","Chla","SA","TN","Whitefish P/A","Mean depth","%Sed <2mm","Secchi","TP","Turbidity","Latitude","Temp")
PC1.plot<-ggplot(newdata0,aes(x = Variable, y=I))+
geom_bar(stat="identity")+
theme_classic()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
xlab("Variable")+
ylab("Percent variance")+
theme(axis.title.x=element_blank())+
theme(axis.title.y=element_blank())+
ylim(0,35)
PC1.plot
library(ggplot2)
PC2<-scores(fit1)[,2]
library(hier.part)
xcan.frame<-data.frame(predictors3$X.silts.and.clays,predictors3$Chla,predictors3$SA,predictors3$TN,predictors3$Sp_Whitefish,predictors3$Mean.Depth,predictors3$X...2mm,predictors3$Secchi,predictors3$TP,predictors3$Turb,predictors3$Latitude,predictors3$Temp)
hier.pc2<-hier.part(PC2,xcan=xcan.frame)
#take results out of hier.richness
hier.abun.res<-hier.pc2$I.perc
hier.abun.res$Variable<-factor(row.names(hier.abun.res),levels=sort(row.names(hier.abun.res)))
newdata6 <- hier.abun.res
newdata6$Variable<-c("% Silts/clays","Chla","SA","TN","Whitefish P/A","Mean depth","%Sed <2mm","Secchi","TP","Turbidity","Latitude","Temp")
PC2.plot<-ggplot(newdata6,aes(x = Variable, y=I))+
geom_bar(stat="identity")+
theme_classic()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
xlab("Variable")+
ylab("Percent variance")+
theme(axis.title.x=element_blank())+
theme(axis.title.y=element_blank())+
ylim(0,35)
PC2.plot
library(cowplot)
library(grid)
library(gridExtra)
panel.plot<-plot_grid(abun.plot,rich.plot,PC1.plot,PC2.plot, ncol=2, labels=c("A","B","C","D"),label_x=0.11,hjust=0,vjust=2, align="v", rel_heights=c(0.6,0.6,1))
y.grob <- textGrob("Percent Variance",
gp=gpar(fontface="bold", col="black", fontsize=15), rot=90)
x.grob <- textGrob("Variable",
gp=gpar(fontface="bold", col="black", fontsize=15))
grid.arrange(arrangeGrob(panel.plot, left = y.grob, bottom = x.grob))
panel.plot<-plot_grid(abun.plot,rich.plot,PC1.plot,PC2.plot, ncol=2, labels=c("A","B","C","D"),label_x=0.11,hjust=0,vjust=2, align="v", rel_heights=c(0.6,1))
library(cowplot)
library(grid)
library(gridExtra)
panel.plot<-plot_grid(abun.plot,rich.plot,PC1.plot,PC2.plot, ncol=2, labels=c("A","B","C","D"),label_x=0.11,hjust=0,vjust=2, align="v", rel_heights=c(0.6,1))
#create common x and y labels
y.grob <- textGrob("Percent Variance",
gp=gpar(fontface="bold", col="black", fontsize=15), rot=90)
x.grob <- textGrob("Variable",
gp=gpar(fontface="bold", col="black", fontsize=15))
#add to plot
tiff("hierfigure.tiff",width=1200,height=1800,compression="none",res=300)
grid.arrange(arrangeGrob(panel.plot, left = y.grob, bottom = x.grob))
dev.off()
final.plot<-grid.arrange(arrangeGrob(panel.plot, left = y.grob, bottom = x.grob))
final.plot
library(cowplot)
library(grid)
library(gridExtra)
panel.plot<-plot_grid(abun.plot,rich.plot,PC1.plot,PC2.plot, ncol=2, labels=c("A","B","C","D"),label_x=0.11,hjust=0,vjust=2, align="v", rel_heights=c(0.8,1))
#create common x and y labels
y.grob <- textGrob("Percent Variance",
gp=gpar(fontface="bold", col="black", fontsize=15), rot=90)
x.grob <- textGrob("Variable",
gp=gpar(fontface="bold", col="black", fontsize=15))
final.plot<-grid.arrange(arrangeGrob(panel.plot, left = y.grob, bottom = x.grob))
final.plot
#add to plot
tiff("hierfigure.tiff",width=1200,height=1800,compression="none",res=300)
final.plot
dev.off()
#add to plot
tiff("hierfigure.tiff",width=5600,height=5200,compression="none",res=800)
final.plot
#add to plot
tiff("hierfigure.tiff",width=5600,height=5200,compression="none",res=800)
grid.arrange(arrangeGrob(panel.plot, left = y.grob, bottom = x.grob))
dev.off()
predictors3=read.csv("explanatory_32_reduced.csv",stringsAsFactors=F)
predictors3=read.csv("explanatory_32_reduced.csv",stringsAsFactors=F)
row.names(predictors3)=predictors3[,1]; predictors3[,1]<-NULL
predictors3$Temp=log(predictors3$Temp+1) #this one needed for temp
predictors3$Cond=log10(predictors3$Cond) #cond
predictors3$Turb=log(predictors3$Turb) #turb
predictors3$SA=log10(predictors3$SA) #SA
predictors3$Mean.Depth=log2(predictors3$Mean.Depth) #Mean depth
predictors3$Chla=log10(predictors3$Chla) #Chla
predictors3$TSS=(predictors3$TSS)^(1/3) #TSS
predictors3$TOC=log10(predictors3$TOC+1) #TOC
predictors3$Ca=log(predictors3$Ca) #Ca
predictors3$TP=log10(predictors3$TP) #TP
predictors3$Secchi=(predictors3$Secchi)^(1/3) #Secchi
predictors3$Catchment.Area=log(predictors3$Catchment.Area) #catchment
predictors3$X..OM=log2(predictors3$X..OM) #%OM
predictors3$X.CaCO3=(predictors3$X.CaCO3)^(1/3) #%CaCO3
predictors3$X.silts.and.clays=(predictors3$X.silts.and.clays)^(1/3) #%clay and silt
#z3<-decostand(predictors3, "standardize")
#matrices of predictors
cor(predictors3, method = c("pearson"))
library(Hmisc)
res<-rcorr(as.matrix(predictors3)) #significant values
res$r
res$P
flattenCorrMatrix <- function(cormat, pmat) {
ut <- upper.tri(cormat)
data.frame(
row = rownames(cormat)[row(cormat)[ut]],
column = rownames(cormat)[col(cormat)[ut]],
cor  =(cormat)[ut],
p = pmat[ut]
)
}
flattenCorrMatrix(res$r, res$P)
#install.packages("corrplot")
library(corrplot)
# Insignificant correlations are left blank
colnames(res$r) <- c("Temperature","pH", "Conductivity","DO","Turbidity","Latitude","TSS","Chl-a","TOC","TN","Ca", "TP","SA","Mean depth","Secchi","Catchment area"," % sediment<2mm","% silts and clays","% Organic Matter","% CaCO3", "Whitefish P/A", "Pike P/A","Cisco P/A")
rownames(res$r) <- c("Temperature","pH", "Conductivity","DO","Turbidity","Latitude","TSS","Chl-a","TOC","TN","Ca", "TP","SA","Mean depth","Secchi","Catchment area"," % sediment<2mm","% silts and clays","% Organic Matter","% CaCO3", "Whitefish P/A", "Pike P/A","Cisco P/A")
tiff("corplot.tif",width=5600,height=5200,compression="lzw",res=800)
corrplot(res$r, type="upper", order="hclust",
p.mat = res$P, sig.level = 0.05, insig = "blank", tl.col="black")
dev.off()
corrplot(res$r, type="upper", order="hclust",
p.mat = res$P, sig.level = 0.05, insig = "blank", tl.col="black")
#add to plot
tiff("hierfigure.tiff",width=5600,height=5200,compression="lzw",res=800)
grid.arrange(arrangeGrob(panel.plot, left = y.grob, bottom = x.grob))
dev.off()
#add to plot
tiff("hierfigure.tiff",width=4000,height=3800,compression="lzw",res=800)
grid.arrange(arrangeGrob(panel.plot, left = y.grob, bottom = x.grob))
dev.off()
library(cowplot)
library(grid)
library(gridExtra)
panel.plot<-plot_grid(abun.plot,rich.plot,PC1.plot,PC2.plot, ncol=2, labels=c("A","B","C","D"),label_x=0.13,hjust=0,vjust=2, align="v", rel_heights=c(0.8,1))
#create common x and y labels
y.grob <- textGrob("Percent Variance",
gp=gpar(fontface="bold", col="black", fontsize=12), rot=90)
x.grob <- textGrob("Variable",
gp=gpar(fontface="bold", col="black", fontsize=12))
grid.arrange(arrangeGrob(panel.plot, left = y.grob, bottom = x.grob))
#add to plot
tiff("hierfigure.tiff",width=4000,height=3800,compression="lzw",res=800)
grid.arrange(arrangeGrob(panel.plot, left = y.grob, bottom = x.grob))
dev.off()
blogdown:::serve_site()
setwd("C:/Users/dgray/OneDrive - Wilfrid Laurier University/Website/academic-kickstart")
blogdown:::serve_site()
blogdown:::serve_site()
